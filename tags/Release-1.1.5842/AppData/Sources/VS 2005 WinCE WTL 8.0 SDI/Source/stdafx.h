// $PROJECT$ application.
// Copyright (c) $YEAR$ by $AUTHOR$,
// All rights reserved.

// stdafx.h - include file for standard system include files

// initially generated by $GENERATOR$ on $DATE$ at $TIME$
// visit http://zarezky.spb.ru/projects/afx_scratch.html for more info

#if !defined(__stdafx_h)
#define __stdafx_h

#if defined(_MSC_VER) && (_MSC_VER > 1000)
#pragma once
#endif   // _MSC_VER

//////////////////////////////////////////////////////////////////////////////////////////////
// unwanted warnings

// unreferenced inline/local function has been removed
#pragma warning(disable: 4514)
// function not inlined
#pragma warning(disable: 4710)
// identifier was truncated in the debug information
#pragma warning(disable: 4786)

// CE COM has no single threaded apartment (everything runs in the MTA)
// hence we declare we're not concerned about thread safety issues
#define _CE_ALLOW_SINGLE_THREADED_OBJECTS_IN_MTA

//////////////////////////////////////////////////////////////////////////////////////////////
// ATL headers

#define _ATL_NO_COM_SUPPORT
#define _ATL_NO_HOSTING
#define _ATL_CSTRING_EXPLICIT_CONSTRUCTORS
#define _ATL_NO_AUTOMATIC_NAMESPACE

#include <atlbase.h>
#include <atlstr.h>
#include <atltypes.h>

//////////////////////////////////////////////////////////////////////////////////////////////
// WTL headers

#if defined(WIN32_PLATFORM_WFSP)
#include <tpcshell.h>
#endif   // WIN32_PLATFORM_WFSP

#define _WTL_NO_CSTRING
#define _WTL_NO_WTYPES
#define _WTL_NO_AUTOMATIC_NAMESPACE

#include <atlapp.h>
extern WTL::CAppModule _Module;
#include <atlwin.h>
#include <atlframe.h>
#include <atlcrack.h>
#include <atlscrl.h>
#include <atlctrls.h>
#include <atlwince.h>

//////////////////////////////////////////////////////////////////////////////////////////////
// DRA headers

#include <DeviceResolutionAware.h>

//////////////////////////////////////////////////////////////////////////////////////////////
// some tricks

// force ISO/IEC 14882 conformance in for loop scope
#if (_MSC_VER < 1300)
#define for if (false); else for
#else
#pragma conform(forScope, on)
#endif   // _MSC_VER

#endif   // __stdafx_h

// end of file
